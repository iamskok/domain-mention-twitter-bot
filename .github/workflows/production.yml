name: Ship To Prod ðŸš€

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install Dependencies
      run: yarn --frozen-lockfile

    - name: Create `.env` File
      uses: SpicyPizza/create-envfile@v1.0
      with:
        envkey_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        envkey_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        envkey_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        envkey_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        envkey_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        envkey_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        envkey_FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        envkey_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        envkey_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        envkey_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        envkey_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        envkey_DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        envkey_RECURSION_DEPTH_LIMIT: ${{ secrets.RECURSION_DEPTH_LIMIT }}
        file_name: .env

    - name: Run Tests
      run: yarn test

    - name: Login To DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker Build and Push
      uses: docker/build-push-action@v2
      with:
        push: ${{ github.event_name != 'pull_request' }}
        tags: iamskok/twitter-bot
        context: .
        file: ./Dockerfile

    - name: Execute Remote SSH Commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        args: >
          --script 'docker stop $(docker ps -aq)'
          --script 'docker system prune -a -f'
          --script 'cd /root/app'
          --script 'docker pull iamskok/twitter-bot'
          --script 'nohup docker run --env-file .env -v ${PWD}/secrets:/app/secrets -v ${PWD}/logs:/app/logs iamskok/twitter-bot > nohup.out 2> nohup.err < /dev/null &'
